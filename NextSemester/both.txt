<a name="cs1000"</a><p> <b>CS 1000. Computing Skills and Concepts --3 hrs.</b> <br/> Introduction to operation, applications, implications of computers, microcomputers, and network communications.  Develops skill in current applications and sensitizes students to societal issues related to computing. </p>
<p>(Offered Fall and Spring)</p>
<p>Prerequisite(s): N/A</p>

<a name="cs1010"</a><p> <b>CS 1010. Microcomputer Applications and Systems Integration --3 hrs.</b> <br/> Emphasis on developing macros and programs, importing and exporting files between applications, solving and implementing applications and problems, and other more advanced topics.  Examination of software such as word processing, spreadsheets, and database languages. </p>
<p>(Offered Fall)</p>
<p>Prerequisite(s): CS 1000 or equivalent.</p>

<a name="cs1020"</a><p> <b>CS 1020. Microcomputer Systems --3 hrs.</b> <br/> Functional description of microcomputer operating systems; commands and utilities, system and file organization, memory and file management, troubleshooting strategies, and networks.  </p>
<p>(Offered Spring)</p>
<p>Prerequisite(s): CS 1010 or any one-semester programming course.</p>

<a name="cs1025"</a><p> <b>CS 1025. Modern Tools for Exploring Data --3 hrs.</b> <br/> Explores use of computational tools to explore data sets, find patterns, and solve complex problems.  Topics include representing problems, modeling data, simulating processes, and validating models, with applications in the sciences, social sciences, humanities, and business. </p>
<p>(Offered Fall and Spring)</p>
<p>Prerequisite(s): N/A</p>

<a name="cs1050"</a><p> <b>CS 1050. Computing for All --3 hrs.</b> <br/> Develops an understanding of computing that allows more fluent use of computers.  Topics include computer capabilities and operation, the Internet, privacy, information security, intelligent applications, and end-user programming.  No credit available to Computer Science majors.</p>
<p>(Variable) </p>
<p>Prerequisite(s): N/A</p>

<a name="cs1100"</a><p> <b>CS 1100. Web Development: Client-Side Coding --3 hrs.</b> <br/> Client-side Web development adhering to recent/current Web standards. Includes by-hand Web page development involving basic HTML, CSS, data acquisition using forms, and JavaScript for data validation and simple Web-based tools. </p>
<p>(Offered Fall)</p>
<p>Prerequisite(s): N/A</p>

<a name="cs1120"</a><p> <b>CS 1120. Media Computation --3 hrs.</b> <br/> Introduction to computation, algorithmic thinking, data transformation and processing, and programming in the context of media such as images, sound, and video. </p>
<p>(Offered Spring)</p>
<p>Prerequisite(s): N/A</p>

<a name="cs1130"</a><p> <b>CS 1130. Visual BASIC Programming --3 hrs.</b> <br/> Programming using the language Visual BASIC.  Broad coverage of language syntax, programming practice, and programming problems appropriate to the novice or end-use programmer using a personal computer. </p>
<p>(Offered Fall and Spring)</p>
<p>Prerequisite(s): N/A</p>

<a name="cs1140"</a><p> <b>CS 1140. Introduction to Programming Environments for Education --3 hrs.</b> <br/> Introduction to computer programming through a survey of programming environments used by teachers.  Topics include structure of programming, study of several programming environments used by students at a variety of age/ability levels, and end-user programming for teachers. </p>
<p>(Offered Fall)</p>
<p>Prerequisite(s): N/A</p>

<a name="cs1150"</a><p> <b>CS 1150. Programming Environments for Elementary Education --2 hrs.</b> <br/> Introduction to computational thinking and computer programming. Taught as a survey of programming environments used by elementary education teachers.  Topics include structure of programming and the study of several programming environments used by students at a variety of age/ability levels. Lecture/discussion, 1 period; lab, 2 periods.  </p>
<p>(Offered Fall and Spring)</p>
<p>Prerequisite(s): Level One Field Experience.</p>

<a name="cs1160"</a><p> <b>CS 1160. C/C++ Programming --3 hrs.</b> <br/> Programming using the C and C++ languages including the object-oriented paradigm.  Broad coverage of language syntax and programming practice. Appropriate for developers of general computing applications and systems.  Course presumes no prior programming experience. </p>
<p>(Offered Fall and Spring)</p>
<p>Prerequisite(s): N/A</p>

<a name="cs1410"</a><p> <b>CS 1410. Computer Organization --3 hrs.</b> <br/> Study of computers in terms of their major functional units. Machine representations of data, digital logic, memory, CPUs, buses, and input/output.  Instruction set architectures and their implementations, addressing methods, and sequencing. Assembly language programming.  </p>
<p>(Offered Fall and Spring)</p>
<p>Prerequisite(s) or corequisite(s): CS 1510.</p>

<a name="cs1510"</a><p> <b>CS 1510. Introduction to Computing --4 hrs.</b> <br/> Introduction to software development through algorithmic problem solving and procedural abstraction.   Programming in the small. Fundamental control structures, data modeling, and file processing. Significant emphasis on program design and style. </p>
<p>(Offered Fall and Spring)</p>
<p>Prerequisite(s): N/A</p>

<a name="cs1520"</a><p> <b>CS 1520. Data Structures --4 hrs.</b> <br/> Introduction to use and implementation of data and file structures such as sets, hash tables, stacks, trees, queues, heaps, and graphs.  Basic algorithm analysis.  Searching and sorting.  Basic object-oriented analysis, design, and  modeling tools. Prerequisite(s): CS 1510 or department approval.  </p>
<p>(Offered Fall and Spring)</p>
<p>Prerequisite(s) or corequisite(s): CS 1800 or department approval.</p>

<a name="cs1800"</a><p> <b>CS 1800. Discrete Structures --3 hrs.</b> <br/> Introduction to logical forms, arguments, predicates, and quantified statements; methods of proof; elementary  number theory; counting; sequences; sets; functions; relations; graphs; and Boolean algebra in the context of computer science.  </p>
<p>(Offered Fall and Spring)</p>
<p>Prerequisite(s): CS 1130, CS 1160, or CS 1510.</p>

<a name="cs1100"</a><p> <b>CS 1100. Web Development: Client-Side Coding --3 hrs.</b> <br/> Client-side Web development adhering to recent/current Web standards. Includes by-hand Web page development involving basic HTML, CSS, data acquisition using forms, and JavaScript for data validation and simple Web-based tools. </p>
<p>(Offered Fall)</p>
<p>Prerequisite(s): N/A</p>

<a name="cs2420"</a><p> <b>CS 2420. Computer Architecture and Parallel Programming --3 hrs.</b> <br/> Computer architecture of uniprocessor and multiprocessor systems with an emphasis on parallel programming to achieve high performance. Topics include processor design (pipelining and superscalar), memory hierarchy, interconnection networks, performance metrics, parallel program design, and parallel programming tools for multi-core systems, clusters, and graphics processing units.  </p>
<p>(Offered Fall)</p>
<p>Prerequisite(s): CS 1410.</p>

<a name="cs2530"</a><p> <b>CS 2530. Intermediate Computing --3 hrs.</b> <br/> Intermediate software development in an object-oriented environment. Further experience with object-oriented analysis and design, including modeling languages.  Focus on software reuse through frameworks and patterns and on software development methodology and tools.  </p>
<p>(Offered Fall and Spring)</p>
<p>Prerequisite(s): CS 1520; CS 1800 or department approval.</p>

<a name="cs2720"</a><p> <b>CS 2720. Software Engineering --3 hrs.</b> <br/> Study of software life cycle models and their phases--planning, requirements, specifications, design, implementation, testing, and maintenance.  Emphasis on tools, documentation, and applications.  </p>
<p>(Offered Spring)</p>
<p>Prerequisite(s): CS 1520; CS 1800.</p>

<a name="cs2880"</a><p> <b>CS 2880. Topics in Computing --3 hrs.</b> <br/> Topics from recent developments in computing appropriate to students with limited computer science background, often relating to relatively sophisticated or technical use of computing or recent developments in programming.  May be repeated on different topic. </p>
<p>(Variable)</p>
<p>Prerequisite(s): N/A</p>

<a name="cs3110"</a><p> <b>CS 3110. Web Application Development --3 hrs.</b> <br/> Development of web applications such as content management systems. Involves HTML and CSS coding, client- and server-side scripting, the creation and manipulation of databases to generate web pages, and secure authentication of users.  </p>
<p>(Offered Spring)</p>
<p>Prerequisite(s): CS 1520; CS 1100 or COMM 2555.</p>

<a name="cs3120"</a><p> <b>CS 3120. User Interface Design --3 hrs.</b> <br/> Examination of the theory, design, programming, and evaluation of interactive application interfaces.  Topics include human capabilities and limitations, the interface design and engineering process, prototyping and interface construction, interface evaluation, and possibly topics such as data visualization and the World Wide Web.   </p>
<p>(Offered Fall)</p>
<p>Prerequisite(s) for Computer Science majors: CS 1520; CS 1800; junior standing.</p>
<p>Prerequisite(s) for non-Computer Science majors: junior standing;department approval.</p>

<a name="cs3140"</a><p> <b>CS 3140. Database Systems --3 hrs.</b> <br/> Storage of, and access to, physical databases; data models, query languages, transaction processing, and recovery techniques; object-oriented and distributed database systems; and database design.  </p>
<p>(Offered Fall)</p>
<p>Prerequisite(s): CS 1520; CS 1800; junior standing.</p>

<a name="cs3150"</a><p> <b>CS 3150. Information Storage and Retrieval --3 hrs.</b> <br/> Natural language processing; analysis of textual material by statistical, syntactic, and logical methods; retrieval systems models, dictionary construction, query processing, file structures, content analysis; automatic retrieval systems and question-answering systems; and evaluation of retrieval effectiveness.  </p>
<p>(Offered Spring)</p>
<p>Prerequisite(s): CS 1520; CS 1800; junior standing.</p>

<a name="cs3179"</a><p> <b>CS 3179. Cooperative Education --1-4 hrs.</b> <br/> Application of classroom learning to field experience.  Credit may not be applied to major or minor.  Offered on credit/no credit basis only.  May be retaken for up to six credits total. </p>
<p>(Offered Fall and Spring)</p>
<p>Prerequisite(s): N/A</p>

<a name="cs3430"</a><p> <b>CS 3430. Operating Systems --3 hrs.</b> <br/> History and evolution of operating systems; process and processor management; primary and auxiliary storage management; performance evaluation, security, and distributed systems issues; and case studies of modern operating systems.  </p>
<p>(Offered Spring)</p>
<p>Prerequisite(s): CS 1410; CS 1520; CS 1800; junior standing.</p>

<a name="cs3470"</a><p> <b>CS 3470. Networking --3 hrs.</b> <br/> Network architectures and communication protocol standards. Topics include communication of digital data, data-link protocols, local-area networks, network-layer protocols, transport-layer protocols, applications, network security, and management.   </p>
<p>(Offered Fall)</p>
<p>Prerequisite(s): CS 1410; CS 1520; CS 1800; junior standing.</p>
<p>Prerequisite(s) for Technology majors: TECH 1037; TECH 2041;TECH 2042; CS 1160.</p>

<a name="cs3510"</a><p> <b>CS 3510. Topics in Programming --1 hr.</b> <br/> Quick study of a specified programming language or environment for those with considerable programming experience.  Language syntax and semantics, common problems solved using it, and best practices.  </p>
<p>(Variable)</p>
<p>Prerequisite(s): CS 1520; CS 1800.</p>

<a name="cs3530"</a><p> <b>CS 3530. Design and Analysis of Algorithms --3 hrs.</b> <br/> Algorithm design techniques such as dynamic programming and greedy algorithms; complexity analysis of algorithms; efficient algorithms for classical problems; intractable problems and techniques for addressing them; and algorithms for parallel machines.  </p>
<p>(Offered Fall)</p>
<p>Prerequisite(s): CS 1520; CS 1800.</p>

<a name="cs3540"</a><p> <b>CS 3540. Programming Languages and Paradigms --3 hrs.</b> <br/> Organization of programming languages; language design issues including syntax, data types, sequence control, and storage management; comparison of language features from object-oriented, imperative, functional, and logical paradigms.  </p>
<p>(Offered Spring)</p>
<p>Prerequisite(s): CS 1520; CS 1800.</p>

<a name="cs3610"</a><p> <b>CS 3610. Artificial Intelligence --3-4 hrs.</b> <br/> Models of intelligent behavior and problem solving; knowledge representation and search methods; learning; topics such as knowledge-based systems, language understanding, and vision; optional 1-hour lab to include exploration of one or more additional AI programming techniques such as robotics, symbolic programming, heuristic programming, etc.  </p>
<p>(Offered Fall)</p>
<p>Prerequisite(s): CS 1520; CS 1800; junior standing.</p>

<a name="cs3650"</a><p> <b>CS 3650. Computational Biology --3 hrs.</b> <br/> Applications of computer science techniques to biological problems; introduction to computational DNA and protein sequence analysis; dynamic programming; optimal alignment algorithms; DNA sequencing and fragment assembly; gene expression arrays; clustering algorithms; evolutionary trees; multiple alignments; Hidden Markov models.  </p>
<p>(Offered Spring)</p>
<p>Prerequisite(s): CS 1520; CS 1800; junior standing.</p>

<a name="cs3730"</a><p> <b>CS 3730. Project Management --1 hr.</b> <br/> Examination of problems of organizing, controlling, managing, and evaluating a software project; software metrics and human input.  </p>
<p>(Offered Fall and Spring)</p>
<p>Prerequisite(s): CS 2530; junior standing.</p>

<a name="cs3750"</a><p> <b>CS 3750. Software Verification and Validation --3 hrs.</b> <br/> Taxonomy of software defects and approaches to identifying them, including black box testing, functional testing, control flow testing, data flow testing, software inspection.  Introduction to use of static analysisin development of high integrity software.  </p>
<p>(Offered Spring)</p>
<p>Prerequisite(s): CS 2720; junior standing.</p>

<a name="cs3810"</a><p> <b>CS 3810. Theory of Computation --3 hrs.</b> <br/> Topics include regular languages and grammars; finite state automata; context-free languages and grammars; language recognition and parsing; and Turing computability and undecidability.  </p>
<p>(Offered Spring)</p>
<p>Prerequisite(s): CS 1800; junior standing.</p>

<a name="cs4400"</a><p> <b>CS 4400. System Administration --3 hrs.</b> <br/> Major concepts and mechanisms associated with computer system administration.  Focus on issues surrounding user management, the configuration of services, and the coordination of distributed resources.  </p>
<p>(Offered Spring)</p>
<p>Prerequisite(s): CS 3470; junior standing.</p>

<a name="cs4410"</a><p> <b>CS 4410. System Security --3 hrs.</b> <br/> Topics include the need for security services, data integrity, network intrusion and monitoring, configuration of secure services, root kits, and buffer overflow techniques and remedies.  Additional topics include enterprise-wide monitoring, honeypots, and recognizing trends in a networked environment.  </p>
<p>(Offered Fall)</p>
<p>Prerequisite(s): CS 3470; junior standing.</p>

<a name="cs4420"</a><p> <b>CS 4420. Applied Systems Forensics --3 hrs.</b> <br/> Essentials of applied computer system forensics; evidence preserving techniques; reconstruction of storage volumes and deleted volumes and files; identification of evidence in computer memory; encryption; log analysis; generation of forensic reports.  Topics are covered in the context of incidence response to compromised systems.  </p>
<p>(Offered TBD)</p>
<p>Prerequisite(s): CS 1410; CS 1520; CS 1800; CS 3430.</p>

<a name="cs4550"</a><p> <b>CS 4550. Translation of Programming Languages --3 hrs.</b> <br/> Introduction to analysis of programming languages and construction of translators.   </p>
<p>(Offered Fall)</p>
<p>Prerequisite(s): CS 2530 and one of the following: CS 3530, CS 3540, CS 3810; junior standing.</p>
<p>Prerequisite(s) or corequisite(s): CS 3730.</p>

<a name="cs4620"</a><p> <b>CS 4620. Intelligent Systems --3 hrs.</b> <br/> Design and implementation of programs that apply artificial intelligence techniques to problems such as design, diagnosis, and distributed problem solving.  Emphasis on team design and development of large systems.   </p>
<p>(Offered Spring)</p>
<p>Prerequisite(s): CS 2530; CS 3610 or equivalent; junior standing.</p>
<p>Prerequisite(s) or corequisite(s): CS 3730.</p>

<a name="cs4740"</a><p> <b>CS 4740. Real-Time Embedded Systems --4 hrs.</b> <br/> Specification, design, and implementation principles and techniques for real-time embedded systems.  Topics include programming languages and paradigms, reliability and fault tolerance, concurrent programming, scheduling, and the interaction between hardware and software.  Student teams will complete a significant real-time embedded software project.   </p>
<p>(Offered Fall)</p>
<p>Prerequisite(s): CS 2530; CS 2720; junior standing.</p>
<p>Prerequisite(s) or corequisite(s): CS 3730.</p>

<a name="cs4800"</a><p> <b>CS 4800. Undergraduate Research in Computer Science --1-3 hrs.</b> <br/>  </p>
<p></p>
<p>(Offered Fall and Spring)  </p></p>

<a name="cs4880"</a><p> <b>CS 4880. Topics in Computer Science --3 hrs.</b> <br/> Topics of general interest from any area of computer science, including systems, software, or theory.  Can be counted in any specialization area, with departmental approval for individual topics.  </p>
<p>(Variable)</p>
<p>Prerequisite(s): CS 1520; CS 1800; junior standing.</p>

<a name="cs6140"</a><p> <b>CS 6140. Database Management Systems --3 hrs.</b> <br/> Database system concepts, physical data organization, the network model and the DBTG Proposal, the hierarchical model, the relational model, relational query languages, design theory of relational databases, query optimization, and normalization.  </p>
<p>(Variable)</p>
<p>Prerequisite(s): consent of instructor.</p>

<a name="cs6400"</a><p> <b>CS 6400. Computer Systems --3 hrs.</b> <br/> Survey of issues in computer system analysis and design.  Emphasis on relationship between system hardware and software including tools and environments for software development on parallel and distributed computer systems.   </p>
<p>(Variable)</p>
<p>Prerequisite(s) for Computer Science majors: CS 2420 or CS 3430.</p>
<p>Prerequisite(s) for non-Computer Science majors: proficiency in ahigh-level programming language; consent of instructor.</p>

<a name="cs6500"</a><p> <b>CS 6500. Algorithms --3 hrs.</b> <br/> Survey of analysis and design of algorithms.  Topics include algorithm design techniques, efficient algorithms for classical problems, and intractable problems and techniques for solving them.  </p>
<p>(Variable)</p>
<p>Prerequisite(s): CS 3530.</p>

<a name="cs6800"</a><p> <b>CS 6800. Theoretical Foundations of Computing --3 hrs.</b> <br/> Survey of theoretical models of computation and basic theory of computability.  Topics include Turing machines, undecidability, NP-completeness, and computational complexity.  Consideration of applications of theory to contemporary problems in computing.  </p>
<p>(Variable)</p>
<p>Prerequisite(s): CS 3810.</p>
